<html><head><title>[XGAP] 3 Installing XGAP</title></head>
<body text="#000000" bgcolor="#ffffff">
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP002.htm">Previous</a>] [<a href ="CHAP004.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<h1>3 Installing XGAP</h1><p>
<P>
<H3>Sections</H3>
<oL>
<li> <A HREF="CHAP003.htm#SECT001">Overview</a>
<li> <A HREF="CHAP003.htm#SECT002">What you need to install XGAP</a>
<li> <A HREF="CHAP003.htm#SECT003">Getting and unpacking the sources</a>
<li> <A HREF="CHAP003.htm#SECT004">Configuring and Compiling the C part</a>
<li> <A HREF="CHAP003.htm#SECT005">Installing the Startup Script</a>
<li> <A HREF="CHAP003.htm#SECT006">Installing in a different than the standard location</a>
</ol><p>
<p>
Installing XGAP should be easy once you have installed <font face="Gill Sans,Helvetica,Arial">GAP</font> itself. We
assume here that you want to install XGAP in its standard location,
which is in the ``pkg'' subdirectory of the main <font face="Gill Sans,Helvetica,Arial">GAP</font>4 installation.
<p>
<p>
<h2><a name="SECT001">3.1 Overview</a></h2>
<p><p>
You have to perform the following steps to install XGAP:
<p>
<dl compact>
<dt>--<dd>Get the sources
<dt>--<dd>Unpack the sources
<dt>--<dd>Use the <var>configure</var> script to adjust everything to your specific
  system
<dt>--<dd>Compile the C part of XGAP
<dt>--<dd>Edit a certain startup script (if necessary) and install it in 
      an executable location in your system
</dl>
<p>
<p>
<h2><a name="SECT002">3.2 What you need to install XGAP</a></h2>
<p><p>
Being a graphical user interface to <font face="Gill Sans,Helvetica,Arial">GAP</font>, XGAP of course needs
graphics. At the moment this means that you need the X window system in the 
Version 11 Release 5 or newer. On the other hand the type of Unix you use 
should not matter. Please file an issue report on
<pre>
https://github.com/gap-packages/xgap/issues
</pre>
if you encounter problems with certain system configurations.
Note that usage on 
a computer running Microsoft Windows is not officially supported. 
See the file <code>xgap/README.Windows</code> for a report how it could
still work on Windows. 
<p>
Because XGAP contains a C-part you need a C compiler.
<p>
<p>
<h2><a name="SECT003">3.3 Getting and unpacking the sources</a></h2>
<p><p>
In most cases, the XGAP package will already be included in the main
distribution. However, you can also download the sources of the latest
version from
<p>
<pre>
https://gap-packages.github.io/xgap/
</pre>
<p>
You need only one file with the name ``xgap-4.30.tar.gz''
which is in the subdirectory for the packages.
You now change your current directory to the <code>pkg</code> subdirectory of the 
location where you installed
<font face="Gill Sans,Helvetica,Arial">GAP</font>
Now you extract the sources for the XGAP package:
<p>
<pre>
# tar xzvf xgap-4.30.tar.gz
...
</pre>
<p>
The <var>tar</var> utility unpacks the files and stores them into the apropriate
subdirectories. XGAP resides completely in the following subdirectory
(assuming standard location):
<p>
<pre>
gap4r8/pkg/xgap
</pre>
<p>
<p>
<h2><a name="SECT004">3.4 Configuring and Compiling the C part</a></h2>
<p><p>
You have to change your current working directory to the ``xgap''
subdirectory. You do this by
<p>
<pre>
# cd xgap
</pre>
<p>
if your current working directory is the one, where you used
<var>tar</var>. There you invoke the <var>configure</var> script by:
<p>
<pre>
# ./configure
creating cache ./config.cache
checking for make... make
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking target system type... x86_64-unknown-linux-gnu
checking for gcc... gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... yes
...
updating cache ./config.cache
creating ./config.status
creating Makefile
creating xgap.sh
</pre>
<p>
&#8230; indicate omissions. 
This script tries to determine, which kind of operating system and
libraries you have installed and configures the source
accordingly. Normally this should produce some output but no error
messages. 
<p>
Note that you can add ``CONFIGNAME=default64'' after the <var>./configure</var>
command (with ``default64'' replaced by a configuration name you used
to compile <font face="Gill Sans,Helvetica,Arial">GAP</font> with) to compile for a different than the standard
configuration.
<p>
The last step of the script produces some makefiles which are
used to compile the code. You do this by typing
<p>
<pre>
# make
mkdir -p bin/x86_64-unknown-linux-gnu-gcc
cp cnf/configure.out bin/x86_64-unknown-linux-gnu-gcc/configure
( cd bin/x86_64-unknown-linux-gnu-gcc ; CC=gcc ./configure  )
checking for gcc... gcc
checking whether the C compiler works... yes
...
creating ./config.status
creating Makefile
creating config.h
( cd bin/x86_64-unknown-linux-gnu-gcc ; make CC=gcc )
make[1]: Entering directory 
`/scratch/neunhoef/4.0/pkg/xgap/bin/x86_64-unknown-linux-gnu-gcc'
gcc -I. -g -O2   -o xcmds.o -c ../../src.x11/xcmds.c
...
make[1]: Leaving directory \                    # line broken for this manual!
     `/usr/local/lib/gap4/pkg/xgap/bin/i686-unknown-linux2.0.34-gcc'
</pre>
<p>
(a few lines were broken for typesetting purposes in this manual, the
position is marked by a backslash) 
<p>
Now all C sources are compiled and a binary executable is built. It is
stored in a subdirectory of the ``bin'' subdirectory in your ``xgap''
directory. The name of this location has something to do with your
installation. It could for example be
<p>
<pre>
bin/x86_64-unknown-linux-gnu-gcc/xgap
</pre>
<p>
if you compile on a 64-bit Linux system using the GNU-C-Compiler.
<p>
<p>
<h2><a name="SECT005">3.5 Installing the Startup Script</a></h2>
<p><p>
To make the startup of XGAP more convenient there is a startup script
which contains also some configuration information like the position of
your <font face="Gill Sans,Helvetica,Arial">GAP</font> installation. It is in the ``xgap'' directory
and is called ``xgap.sh''. This file is automatically generated
by the <code>configure</code> script and normally you should <strong>not</strong> have to change 
anything in it. Just copy it to some location that people have in their
``PATH'' environment variable, for example to ``/usr/local/bin''.
This completes the installation.
<p>
If you want to change anything in the installation, you
can also edit the script until the line
<p>
<pre>
##  STOP EDITING HERE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
</pre>
<p>
You can specify the directory where <font face="Gill Sans,Helvetica,Arial">GAP</font> is installed (``GAP_DIR''), 
the amount of memory that <font face="Gill Sans,Helvetica,Arial">GAP</font> should use as initial workspace
(``GAP_MEM''), the name of the <font face="Gill Sans,Helvetica,Arial">GAP</font>-executable (``GAP_PRG'') and the
name of the XGAP-executable (``XGAP_PRG''). The first three are exactly 
the same things that you could edit in the main <font face="Gill Sans,Helvetica,Arial">GAP</font> startup script.
After that you have the possibility to control the behaviour of the XGAP
startup script. You can specify whether XGAP goes into the background
(``DAEMON'') and whether it prints out information about its parameters
(``VERBOSE''). Note that it is possible to combine ``DAEMON=YES''
and ``VERBOSE=YES'' because the script actually runs in the foreground and
only the C program is put into the background.
<p>
<p>
<h2><a name="SECT006">3.6 Installing in a different than the standard location</a></h2>
<p><p>
It could happen that you do not want to install XGAP in its
standard location, perhaps because you do not want to bother your
system administrator and have no access to the <font face="Gill Sans,Helvetica,Arial">GAP</font> directory. In
this case you can unpack XGAP in any other location within a
``pkg'' directory with the <var>tar</var> command as described above. Let us
call this directory ``pkg'' for the moment. You get an ``xgap''
subdirectory with all the files of XGAP in it. You follow the
standard procedure with one exception:
<p>
In the ``./configure'' command, add the following option:
<p>
<pre>
./configure --with-gaproot=/usr/local/lib/gap4r8
</pre>
<p>
if <code>/usr/local/lib/gap4r8</code> is the location of the main <font face="Gill Sans,Helvetica,Arial">GAP</font> installation.
You can find out where the main <font face="Gill Sans,Helvetica,Arial">GAP</font>4 installation is by starting 
<font face="Gill Sans,Helvetica,Arial">GAP</font> as usual and looking at the variable <code>GAPInfo.RootPaths</code> 
within <font face="Gill Sans,Helvetica,Arial">GAP</font>.
<p>
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP002.htm">Previous</a>] [<a href ="CHAP004.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>XGAP manual<br>April 2019
</address></body></html>